name: Run tests with coverage (Scala code)

on:
  push:
    branches:
      - scala
  pull_request:
    branches:
      - scala
    
env:
  PROJECT_NAME: Arcane.Stream.SqlServerChangeTracking
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

defaults:
  run:
    working-directory: ./framework/arcane-framework

jobs:
  validate_commit:
    name: Validate commit
    runs-on: ubuntu-latest
    if: ${{ github.ref != 'refs/heads/main' }}
    permissions:
      id-token: write      # required for dependabot PRs
      pull-requests: write # required for dependabot PRs
      contents: read       # required for dependabot PRs
    steps:
      - uses: actions/checkout@v4
      - name: Setup Scala
        uses: japgolly/setup-everything-scala@v3.1
        with:
          java-version: temurin:1.23.0.1
      - name: Build the Docker Compose stack
        run: docker compose up -d
      - name: Build and test
        shell: bash
        env:
          ARCANE_FRAMEWORK__S3_CATALOG_ACCESS_KEY_ID: minioadmin
          ARCANE_FRAMEWORK__S3_CATALOG_SECRET_ACCESS_KEY: minioadmin
          ARCANE_FRAMEWORK__S3_CATALOG_AUTH_INIT_TOKEN: principal:root;realm:default-realm
          ARCANE_FRAMEWORK__S3_CATALOG_AUTH_CLIENT_URI: http://localhost:8181/api/catalog/v1/oauth/tokens
          ARCANE_FRAMEWORK__S3_CATALOG_AUTH_SCOPE: PRINCIPAL_ROLE:ALL
          ARCANE_FRAMEWORK__S3_CATALOG_ENDPOINT: http://localhost:9000
          AWS_REGION: us-east-1
        run: sbt++field scala361 test


  build_image:
    name: Build Docker Image and Helm Charts
    runs-on: ubuntu-latest
    needs: [ validate_commit ]
    if: ${{ needs.validate_commit.result == 'success' || needs.validate_commit.result == 'skipped' }}
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Log in to the Container registry
        uses: docker/login-action@v3.3.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get project version
        uses: SneaksAndData/github-actions/generate_version@v0.1.9
        id: version

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}},value=${{steps.version.outputs.version}}
          flavor:
            latest=false

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.7.1
        with:
          use: true
          platforms: linux/arm64,linux/amd64

      - name: Build and push Docker image
        uses: docker/build-push-action@v6.9.0
        with:
          context: .
          file: .container/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/arm64,linux/amd64

      - name: Build and Push Chart
        uses: SneaksAndData/github-actions/build_helm_chart@v0.1.9
        with:
          application: arcane-stream-sqlserver-change-tracking
          app_version: ${{ steps.meta.outputs.version }}
          container_registry_user: ${{ github.actor }}
          container_registry_token: ${{ secrets.GITHUB_TOKEN }}
          container_registry_address: ghcr.io/sneaksanddata/
